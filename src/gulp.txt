<너는 당장 build 자동화를 써야한다>

우선 이 글은 gulp사용법에 대한 글이 아니다. build 자동화 도구를 개선할까말까 고민하는 개발자들을 위한 글이다. 이미 gulp, webpack 등 자동화툴을 쓰고있는 개발자들은 필요성을 알기 때문에 이 글은 그다지 도움이 되지 않을 것이다. (조금만 검색해도 나보다 훨씬 초천재 개발자분들의 설치, 사용법들이 많다.) 내가 왜 이 작업을 하게 되었고 뭐가 그리 중요했는지, 써야하는 이유에 촛점을 맞추었다.

시작부터 본격적인 gulp에 대한 이야기를 하기 전에 왜 gulp를 개선해야만 했는지 부터 말을 해야겠다.
일단 내가 gulp개선과 기존의 directory구조 변경을 생각하게된 이유는 크몽의 개발환경 향상, 애사심 뭐 그런 회사를 위한것 과는 거리가 멀었다. 내가 크몽에서 1~2년 일하고 말게 아니기 때문에 앞으로 개발하기 위한 최소한의 세팅은 직접 하며 구성하고 싶었다.

사실 가장 하고 싶었던 작업은, front-end의 code style의 확립이었다. 좀 더 정확히는 ESLint의 적용이다. front-end 작업자들 간의 code style 규칙을 만들어 누가 작업하던, 항상 일관된 code style대로 코딩되는 것 인데, 이것을 적용하려니 gulp 개선이 되어야 했다.

첫 크몽에 입사하고 맡은 업무는 event 관련 페이지 publish 작업이었다.
기존 사용하였던 개발환경과 크게 다르지 않아 (laravel + react -> laravel + vuejs) 크게 적응에 어려움은 없을것이라 생각하여 늘 하던대로 event페이지 작업을 완료하고 배포가 되었다.
하지만 역시나 다음 날 출근을 하니 버그가 날 기다리고 있었다. 하지만 조금 생소한 버그였다. es6관련 오류였는데, 이전의 개발환경에선 babel, browserify가 거의 대부분의 script에 걸려있었기 때문에 습관적으로 es6로 작업을 한 것이다. 결국은 es5스타일로 다시 작업이 진행이 되었다.
하지만 곰곰히 생각해보니 호환성을 위해 es6를 사용하지 않는것이 아닌 es6를 사용하도록 환경이 구성되어야 하는게 맞는 것 아닌가 라는 생각했다. (잘못을 인정 못해서 그런것은 절대 아니다!)

그래서 크몽에 입사한지 1주일만에 다른 작업을 뒤로하고 회사에서 gulp만 외치고 다녔다. 다른 무언가를 하려면 gulp 개선부터 들어가야 해야했다.
script, sass는 하나 수정할때마다 gulp를 명령어를 쳐야했다. 나는 주르륵 코드를 적고 한번 새로고침해서 짠하고 바뀌는 스타일의 개발자가 아니라 한줄 한줄 내가 짠 코드도 의심이 되어 한줄 한줄 자주자주 스텝별로 확인하는것이 습관이라 이러한 현재 환경은 나완 정말 맞지 않았다.

그래서 앞잡이(크몽의 front-end Bk, Jacob, Ran) 챕터 회의때 gulp 개선을 요청하였고 gulp개선을 해야하는 이유에 대해 keynote로 설명했고 결국엔 공식적인? 회사의 프로젝터 일정으로 잡히게 되었다.

우선 gulp 개선의 가장큰 목적은 4가지였다.
1. es6 및 최신기술과 라이브러리를 사용하자
2. gulp watch를 효율적으로 사용하자
3. script태그와 style태그로 쓰는것을 지양하자 (.js, .scss파일 많아지는것에 대한 부담가지지 말자)
4. script, style, directory 구조를 기능별로 구조화시키자

그렇게 gulp 개선 작업을 본격적으로 시작하였지만 사실 assets directory 구조 변경이 더 시급하였다.
gulp watch가 가능하긴 했지만, 구조화가 안되있어, 파일 하나 변경될때마다 모든 gulp가 build되어 속도가 느려서 거의 사용을 못하였고, 단순히 gulp watch를 걸어서 쉽게 끝낼 수 있는 작업도 아니었다. (assets directory가 기능별, 관심사별로 나누어져있지 않았기 때문에)

그래서 가장 먼저 기능별로 구분하여 폴더를 나눈 뒤, 실제 kmong의 소스와 library들을 분리 시켰다. 그 후 npm으로 install 할 수 있는 library들은 npm을 이용하여 library들의 파일이 많이 줄었다. 아직 kmong의 전체 구조에 대해 잘 모르기 때문에 몇몇 부분이 수정된 library들은 건들이기 무서워서 안전한 것들만 우선 적용시켰다.

계획은 거창했고 의욕은 앞섰지만 gulp 뿐만아니라 webpack등 build 자동화툴을 제대로 만져본 적이 경험이 없어서 (gulp, elixir, babel, browserify, stream) 작업과 공부를 병행하였고, 숫한 삽질덕에 겨우겨우 완성을 했다.

사실 이전 개발환경에선 babel과 browserify를 거쳐야 할 파일도 많이 없어서 gulp에 대해 크게 신경 쓰지 않아도 되었다.

기존 gulpfile을 메모장 코딩으로 비유하자면 이번 개선된 gulp는 phpStorm(고수개발자들이 짠)까진 안되더라도 sublime text 코딩 정도는 되는것 같다.
고수 개발자들이보면 콧웃음 칠 코드지만 못해본 영역을 파보고 회사에 필요성을 어필하여 잘 마무리되어 뿌듯하다. 

이제 gulp가 완성이 됨과 동시에 directory 구조와 es6가 해결되었으니, 원래 가장 하려던 kmong의 코드스타일, ESLint를 적용 할 예정이다.

gulp 개선을 하며 도움이 됫던 곳
https://github.com/FEDevelopers/tech.description/wiki/%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C-%EA%B0%9C%EB%B0%9C%EC%9D%84-%EC%9C%84%ED%95%9C-Gulp

https://velopert.com/1344